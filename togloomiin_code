<!DOCTYPE html>
<html lang="mn">
<head>
  <meta charset="UTF-8">
  <title>–ö–∞—Ç–∞–∫–∞–Ω–∞ –¢–æ–≥–ª–æ–æ–º</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background-color: #f0f8ff;
      padding: 40px;
    }
    h1 {
      font-size: 2em;
      margin-bottom: 10px;
    }
    #kana {
      font-size: 6em;
      margin: 20px 0;
    }
    input, button {
      font-size: 1.2em;
      padding: 10px 20px;
      margin: 10px;
      border-radius: 10px;
      border: 1px solid #aaa;
      cursor: pointer;
    }
    #feedback {
      font-size: 1.5em;
      margin-top: 10px;
      color: red;
    }
    #score {
      font-size: 1.3em;
      margin-top: 10px;
    }
    #choices button {
      display: inline-block;
      margin: 5px;
      background-color: #fff;
      border: 2px solid #ccc;
      transition: 0.2s;
    }
    #choices button:hover {
      background-color: #e0f0ff;
    }
    #progressContainer {
      width: 100%;
      height: 10px;
      background-color: #ddd;
      margin: 20px auto;
      border-radius: 5px;
      overflow: hidden;
    }
    #progressBar {
      width: 100%;
      height: 100%;
      background-color: #00bfff;
      animation: none;
    }
    @keyframes shrink {
      from { width: 100%; }
      to { width: 0%; }
    }
  </style>
</head>
<body>

  <h1>–ö–∞—Ç–∞–∫–∞–Ω–∞ —Ç–æ–≥–ª–æ–æ–º</h1>
  <div id="kana">„Ç¢</div>

  <div id="choices"></div>
  <div id="progressContainer"><div id="progressBar"></div></div>

  <div id="feedback"></div>
  <div id="score">–û–Ω–æ–æ: 0</div>

  <script>
    const katakana = {
      "„Ç¢": "a", "„Ç§": "i", "„Ç¶": "u", "„Ç®": "e", "„Ç™": "o",
      "„Ç´": "ka", "„Ç≠": "ki", "„ÇØ": "ku", "„Ç±": "ke", "„Ç≥": "ko",
      "„Çµ": "sa", "„Ç∑": "shi", "„Çπ": "su", "„Çª": "se", "„ÇΩ": "so",
      "„Çø": "ta", "„ÉÅ": "chi", "„ÉÑ": "tsu", "„ÉÜ": "te", "„Éà": "to",
      "„Éä": "na", "„Éã": "ni", "„Éå": "nu", "„Éç": "ne", "„Éé": "no",
      "„Éè": "ha", "„Éí": "hi", "„Éï": "fu", "„Éò": "he", "„Éõ": "ho",
      "„Éû": "ma", "„Éü": "mi", "„É†": "mu", "„É°": "me", "„É¢": "mo",
      "„É§": "ya", "„É¶": "yu", "„É®": "yo",
      "„É©": "ra", "„É™": "ri", "„É´": "ru", "„É¨": "re", "„É≠": "ro",
      "„ÉØ": "wa", "„É≤": "wo", "„É≥": "n"
    };

    const kanaKeys = Object.keys(katakana);
    const kanaHistory = {};
    kanaKeys.forEach(k => kanaHistory[k] = 0);

    let score = 0;
    let timerTimeout;
    let currentKana = "";

    const kanaEl = document.getElementById("kana");
    const feedbackEl = document.getElementById("feedback");
    const scoreEl = document.getElementById("score");
    const choicesDiv = document.getElementById("choices");
    const progressBar = document.getElementById("progressBar");

    function startVisualTimer() {
      progressBar.style.animation = "none";
      void progressBar.offsetWidth;
      progressBar.style.animation = "shrink 60s linear forwards";

      clearTimeout(timerTimeout);
      timerTimeout = setTimeout(() => {
        showAnswer(false);
      }, 60000);
    }

    function pickKana() {
      const availableKana = kanaKeys.filter(k => kanaHistory[k] < 3);
      if (availableKana.length === 0) {
        feedbackEl.textContent = "üéâ –¢–∞ –±“Ø—Ö “Ø—Å–≥–∏–π–≥ 3 —É–¥–∞–∞ –¥–∞–≤—Ç–ª–∞–∞!";
        kanaEl.textContent = "-";
        choicesDiv.innerHTML = "";
        return;
      }

      currentKana = availableKana[Math.floor(Math.random() * availableKana.length)];
      kanaHistory[currentKana]++;
      kanaEl.textContent = currentKana;
      feedbackEl.textContent = "";
      showChoices();
      startVisualTimer();
    }

    function showChoices() {
      const correct = katakana[currentKana];
      const allValues = Object.values(katakana);
      const choices = new Set([correct]);
      while (choices.size < 4) {
        const rand = allValues[Math.floor(Math.random() * allValues.length)];
        choices.add(rand);
      }

      const shuffled = Array.from(choices).sort(() => Math.random() - 0.5);
      choicesDiv.innerHTML = "";

      shuffled.forEach(choice => {
        const btn = document.createElement("button");
        btn.textContent = choice;
        btn.onclick = () => checkAnswer(choice);
        choicesDiv.appendChild(btn);
      });
    }

    function checkAnswer(input) {
      const correct = katakana[currentKana];
      if (input.trim().toLowerCase() === correct) {
        score++;
        scoreEl.textContent = `–û–Ω–æ–æ: ${score}`;
        pickKana();
      } else {
        showAnswer(false);
      }
    }

    function showAnswer() {
      clearTimeout(timerTimeout);
      progressBar.style.animation = "none";
      const correctAnswer = katakana[currentKana];
      feedbackEl.textContent = `‚ùå –ë—É—Ä—É—É! –ó”©–≤ —Ö–∞—Ä–∏—É–ª—Ç: ${correctAnswer}`;
      setTimeout(() => {
        if (confirm("–î–∞—Ö–∏–Ω —ç—Ö–ª—ç—Ö “Ø“Ø?")) {
          score = 0;
          scoreEl.textContent = `–û–Ω–æ–æ: ${score}`;
          resetKanaHistory();
          pickKana();
        } else {
          feedbackEl.textContent = "–¢–æ–≥–ª–æ–æ–º –¥—É—É—Å—Å–∞–Ω üéå";
          kanaEl.textContent = "-";
          choicesDiv.innerHTML = "";
        }
      }, 1000);
    }

    function resetKanaHistory() {
      for (let key in kanaHistory) {
        kanaHistory[key] = 0;
      }
    }

    pickKana();
  </script>
</body>
</html>
